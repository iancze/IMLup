rule all:
    input:
        "data/raw/imlup.asdf",
        "data/raw/dsharp.fits"

# copy the exported data from CASA into this directory
rule seed_data:
    output: data="data/raw/imlup.asdf", fits="data/raw/dsharp.fits"
    shell: 
        "cp ../casa_analysis/data/export/imlup.asdf {output.data} && "
        "cp ../casa_analysis/data/temp/initial/dsharp.fits {output.fits}"

rule baselines:
    input: "data/raw/imlup.asdf"
    output: "analysis/baselines.png"
    shell: "python src/plot_baselines.py {input} {output}"

# make a dirty image and compare to CLEAN
rule dirty_img:
    input: "data/raw/imlup.asdf"
    output: "analysis/dirty_image.png"
    shell: "python src/dirty_image.py {input} {output}"


# start to SGD
# python src/sgd.py data/raw/imlup.asdf --lr 10 --batch-size 50000 --tensorboard-log-dir analysis/runs/exp1 --epochs 2 --save-checkpoint analysis/checkpoints/checkpoint.pt
# python src/sgd.py data/raw/imlup.asdf --lr 10 --batch-size 50000 --tensorboard-log-dir analysis/runs/exp2 --epochs 3 --load-checkpoint analysis/checkpoint.pt --save-checkpoint analysis/checkpoints//checkpoint2.pt 
# python src/sgd.py data/raw/imlup.asdf --lr 30 --batch-size 50000 --tensorboard-log-dir analysis/runs/exp3 --epochs 3 --load-checkpoint analysis/checkpoints/checkpoint2.pt --save-checkpoint analysis/checkpoints/checkpoint3.pt 
# python src/sgd.py data/raw/imlup.asdf --lr 100 --batch-size 50000 --tensorboard-log-dir analysis/runs/exp4 --epochs 3 --load-checkpoint analysis/checkpoints/checkpoint3.pt --save-checkpoint analysis/checkpoints/checkpoint4.pt 

